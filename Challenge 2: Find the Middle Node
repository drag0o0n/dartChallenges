import 'dart:io';

class Node {
dynamic data;
Node? next;

Node(this.data);
}

class LinkedList {
Node? head;

void addNode(dynamic data) {
Node newNode = Node(data);
newNode.next = head;
head = newNode;
}

Node? findMiddleNode() {
if (head == null) {
return null;
}

Node? slowPointer = head;
Node? fastPointer = head;

while (fastPointer != null && fastPointer.next != null) {
  slowPointer = slowPointer!.next;
  fastPointer = fastPointer.next!.next;
}

return slowPointer;

}
}

void findAndPrintMiddleNode() {
LinkedList linkedList = LinkedList();

stdout.write("Enter the number of nodes: ");
int numNodes = int.parse(stdin.readLineSync()!);

for (int i = 1; i <= numNodes; i++) {
stdout.write("Enter data for node $i: ");
dynamic data = stdin.readLineSync();
linkedList.addNode(data);
}

// Finding the middle node
Node? middleNode = linkedList.findMiddleNode();

if (middleNode != null) {
print("Middle Node: ${middleNode.data}");
} else {
print("The linked list is empty.");
}
}

void main() {
findAndPrintMiddleNode();
}
